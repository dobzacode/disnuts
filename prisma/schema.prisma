generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") 
  directUrl = env("POSTGRES_URL_NON_POOLING") 
}

enum RoleType {
    ADMIN
    MODERATOR
    GUEST
}

model User {
    id String @unique @default(uuid())
    username String @unique
    email String @unique
    password String @unique

    members Member[]
    message Message[]
    invitation Invitation[] @relation("user")
    createdInvitation Invitation[] @relation("author")
}

model Server {
    server_id String @unique @default(uuid())

    members Member[]
    channel Channel[]
    message Message[]

    invitation Invitation[]
}

model Channel {
    channel_id String @unique @default(uuid())
    server Server @relation(fields: [server_id], references: [server_id])
    server_id String
    member Member[]
    message Message[]
}

model Member {
    member_id String @unique @default(uuid())
    role RoleType @default(GUEST)
    user User @relation(fields: [user_id], references: [id])
    user_id String
    server Server @relation(fields: [server_id], references: [server_id])
    server_id String
    channel Channel @relation(fields: [channel_id], references: [channel_id])
    channel_id String
}

model Message {
    message_id String @unique @default(uuid())
    content String
    user User @relation(fields: [user_id], references: [id]) 
    user_id String
    server Server @relation(fields: [server_id], references: [server_id])
    server_id String
    channel Channel @relation(fields: [channel_id], references: [channel_id])
    channel_id String
    timestamp DateTime @default(now())
}

model Invitation {
    invitation_id String @unique @default(uuid())
    server Server @relation(fields: [server_id], references: [server_id])
    server_id String
    user User @relation("user", fields: [user_id], references: [id]) 
    user_id String
    author User @relation("author", fields: [author_id], references: [id])
    author_id String
}